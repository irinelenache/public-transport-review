{"version":3,"sources":["services/auth.service.js","http-common.js","services/review.service.js","components/add-review.component.js","components/review.component.js","services/auth-header.js","services/user.service.js","components/reviews-list.component.js","components/login.component.js","components/register.component.js","components/profile.component.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","App.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","create","baseURL","headers","http","get","id","put","delete","transport","AddReview","props","onChangeleavingPoint","bind","onChangearrivingPoint","onChangetransport","onChangeleavingHour","onChangelength","onChangelevelOfCrowd","onChangeNotes","onChangeSatisfaction","saveReview","newReview","state","leavingPoint","arrivingPoint","leavingHour","length","levelOfCrowd","notes","satisfaction","submitted","e","this","setState","target","value","ReviewDataService","console","log","catch","className","onClick","htmlFor","type","required","onChange","name","Component","Review","getReview","updateReview","deleteReview","currentReview","message","match","params","prevState","update","history","push","authHeader","user","ReviewsList","onChangeSearchCriterias","retrieveReviews","refreshList","setActiveReview","removeAllReviews","searchcriterias","reviews","currentIndex","content","UserService","getPublicContent","error","toString","getAll","review","index","deleteAll","findBybusNumber","placeholder","map","to","role","Login","handleLogin","onChangeUsername","onChangePassword","loading","preventDefault","form","validateAll","checkBtn","context","_errors","AuthService","login","window","location","reload","resMessage","src","alt","onSubmit","ref","c","validations","disabled","style","display","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","Profile","redirect","userReady","currentUser","getCurrentUser","substring","substr","roles","BoardUser","getUserBoard","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","App","logOut","showModeratorBoard","showAdminBoard","undefined","includes","logout","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.660ef36a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass ReviewDataService {\n  getAll() {\n    return http.get(\"/reviews\");\n  }\n\n  get(id) {\n    return http.get(`/reviews/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/reviews\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/reviews/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/reviews/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/reviews`);\n  }\n\n  findBybusNumber(transport) {\n    return http.get(`/reviews?transport=${transport}`);\n  }\n}\n\nexport default new ReviewDataService();","import React, { Component } from \"react\";\nimport ReviewDataService from \"../services/review.service\";\n\nexport default class AddReview extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeleavingPoint = this.onChangeleavingPoint.bind(this);\n    this.onChangearrivingPoint = this.onChangearrivingPoint.bind(this);\n    this.onChangetransport = this.onChangetransport.bind(this);\n    this.onChangeleavingHour = this.onChangeleavingHour.bind(this);\n    this.onChangelength = this.onChangelength.bind(this);\n    this.onChangelevelOfCrowd = this.onChangelevelOfCrowd.bind(this);\n    this.onChangeNotes = this.onChangeNotes.bind(this);\n    this.onChangeSatisfaction = this.onChangeSatisfaction.bind(this);\n    this.saveReview = this.saveReview.bind(this);\n    this.newReview = this.newReview.bind(this);\n\n    this.state = {\n      id: null,\n      leavingPoint: \"\",\n      arrivingPoint: \"\",\n      transport: \"\",\n      leavingHour: \"\",\n      length: null,\n      levelOfCrowd: null,\n      notes: \"\",\n      satisfaction: null,\n\n      submitted: false\n    };\n  }\n\n  onChangeleavingPoint(e) {\n    this.setState({\n      leavingPoint: e.target.value\n    });\n  }\n\n  onChangearrivingPoint(e) {\n    this.setState({\n      arrivingPoint: e.target.value\n    });\n  }\n\n  onChangetransport(e) {\n    this.setState({\n      transport: e.target.value\n    });\n  }\n\n  onChangeleavingHour(e) {\n    this.setState({\n      leavingHour: e.target.value\n    });\n  }\n\n  onChangelength(e) {\n    this.setState({\n      length: e.target.value\n    });\n  }\n\n  onChangelevelOfCrowd(e) {\n    this.setState({\n      levelOfCrowd: e.target.value\n    });\n  }\n\n  onChangeNotes(e) {\n    this.setState({\n      notes: e.target.value\n    });\n  }\n\n  onChangeSatisfaction(e) {\n    this.setState({\n      satisfaction: e.target.value\n    });\n  }\n\n  saveReview() {\n    var data = {\n      leavingPoint: this.state.leavingPoint,\n      arrivingPoint: this.state.arrivingPoint,\n      transport: this.state.transport,\n      leavingHour: this.state.leavingHour,\n      length: this.state.length,\n      levelOfCrowd: this.state.levelOfCrowd,\n      notes: this.state.notes,\n      satisfaction: this.state.satisfaction\n    };\n\n    ReviewDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          leavingPoint: response.data.leavingPoint,\n          arrivingPoint: response.data.arrivingPoint,\n          transport: response.data.transport,\n          leavingHour: response.data.leavingHour,\n          length: response.data.length,\n          levelOfCrowd: response.data.levelOfCrowd,\n          notes: response.data.notes,\n          satisfaction: response.data.satisfaction,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newReview() {\n    this.setState({\n      id: null,\n      leavingPoint: \"\",\n      arrivingPoint: \"\",\n      transport: \"\",\n      leavingHour: \"\",\n      length: null,\n      levelOfCrowd: null,\n      notes: \"\",\n      satisfaction: null,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n        <div className=\"submit-form\">\n          {this.state.submitted ? (\n            <div>\n              <h4>You submitted successfully!</h4>\n              <button className=\"btn btn-success\" onClick={this.newReview}>\n                Add\n              </button>\n            </div>\n          ) : (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"transport\">Transport</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"transport\"\n                  required\n                  value={this.state.transport}\n                  onChange={this.onChangetransport}\n                  name=\"transport\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"leavingPoint\">Leaving Point</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"leavingPoint\"\n                  required\n                  value={this.state.leavingPoint}\n                  onChange={this.onChangeleavingPoint}\n                  name=\"leavingPoint\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"arrivingPoint\">Arriving Point</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"arrivingPoint\"\n                  required\n                  value={this.state.arrivingPoint}\n                  onChange={this.onChangearrivingPoint}\n                  name=\"arrivingPoint\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"leavingHour\">Leaving Hour</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"leavingHour\"\n                  required\n                  value={this.state.leavingHour}\n                  onChange={this.onChangeleavingHour}\n                  name=\"leavingHour\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"length\">Length</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"length\"\n                  required\n                  value={this.state.length}\n                  onChange={this.onChangelength}\n                  name=\"length\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"levelOfCrowd\">Level Of Crowd</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"levelOfCrowd\"\n                  required\n                  value={this.state.levelOfCrowd}\n                  onChange={this.onChangelevelOfCrowd}\n                  name=\"levelOfCrowd\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"notes\">Notes</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"notes\"\n                  required\n                  value={this.state.notes}\n                  onChange={this.onChangeNotes}\n                  name=\"notes\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"satisfaction\">Satisfaction</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"satisfaction\"\n                  required\n                  value={this.state.satisfaction}\n                  onChange={this.onChangeSatisfaction}\n                  name=\"satisfaction\"\n                />\n              </div>\n  \n              <button onClick={this.saveReview} className=\"btn btn-success\">\n                Submit\n              </button>\n            </div>\n          )}\n        </div>\n      );\n  }\n}","import React, { Component } from \"react\";\nimport ReviewDataService from \"../services/review.service\";\n\nexport default class Review extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeleavingPoint = this.onChangeleavingPoint.bind(this);\n    this.onChangearrivingPoint = this.onChangearrivingPoint.bind(this);\n    this.onChangetransport = this.onChangetransport.bind(this);\n    this.onChangeleavingHour = this.onChangeleavingHour.bind(this);\n    this.onChangelength = this.onChangelength.bind(this);\n    this.onChangelevelOfCrowd = this.onChangelevelOfCrowd.bind(this);\n    this.onChangeNotes = this.onChangeNotes.bind(this);\n    this.onChangeSatisfaction = this.onChangeSatisfaction.bind(this);\n    this.getReview = this.getReview.bind(this);\n    this.updateReview = this.updateReview.bind(this);\n    this.deleteReview = this.deleteReview.bind(this);\n\n    this.state = {\n      currentReview: {\n        id: null,\n        leavingPoint: \"\",\n        arrivingPoint: \"\",\n        transport: \"\",\n        leavingHour: \"\",\n        length: null,\n        levelOfCrowd: null,\n        notes: \"\",\n        satisfaction: null\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getReview(this.props.match.params.id);\n  }\n\n  onChangeleavingPoint(e){\n    const leavingPoint = e.target.value;\n\n    this.setState(prevState => ({\n      currentReview: {\n        ...prevState.currentReview,\n        leavingPoint: leavingPoint\n      }\n    }));\n  }\n\n  onChangearrivingPoint(e){\n    const arrivingPoint = e.target.value;\n\n    this.setState(prevState => ({\n      currentReview: {\n        ...prevState.currentReview,\n        arrivingPoint: arrivingPoint\n      }\n    }));\n  }\n\n  onChangetransport(e) {\n    const transport = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentReview: {\n          ...prevState.currentReview,\n          transport: transport\n        }\n      };\n    });\n  }\n\n  onChangeleavingHour(e) {\n    const leavingHour = e.target.value;\n    \n    this.setState(prevState => ({\n      currentReview: {\n        ...prevState.currentReview,\n        leavingHour: leavingHour\n      }\n    }));\n  }\n\n  onChangelength(e) {\n    const length = e.target.value;\n    \n    this.setState(prevState => ({\n      currentReview: {\n        ...prevState.currentReview,\n        length: length\n      }\n    }));\n  }\n\n  onChangelevelOfCrowd(e) {\n    const levelOfCrowd = e.target.value;\n    \n    this.setState(prevState => ({\n      currentReview: {\n        ...prevState.currentReview,\n        levelOfCrowd: levelOfCrowd\n      }\n    }));\n  }\n\n  onChangeNotes(e) {\n    const notes = e.target.value;\n    \n    this.setState(prevState => ({\n      currentReview: {\n        ...prevState.currentReview,\n        notes: notes\n      }\n    }));\n  }\n\n  onChangeSatisfaction(e) {\n    const satisfaction = e.target.value;\n    \n    this.setState(prevState => ({\n      currentReview: {\n        ...prevState.currentReview,\n        satisfaction: satisfaction\n      }\n    }));\n  }\n\n  getReview(id) {\n    ReviewDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentReview: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateReview() {\n    ReviewDataService.update(\n      this.state.currentReview.id,\n      this.state.currentReview\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The review was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteReview() {    \n    ReviewDataService.delete(this.state.currentReview.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/reviews')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentReview } = this.state;\n\n    return (\n      <div>\n        {currentReview ? (\n          <div className=\"edit-form\">\n            <h4>Review</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"transport\">Transport</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"transport\"\n                  value={currentReview.transport}\n                  onChange={this.onChangetransport}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"leavingPoint\">Leaving Point</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"transport\"\n                  value={currentReview.leavingPoint}\n                  onChange={this.onChangeleavingPoint}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"arrivingPoint\">Arriving Point</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"transport\"\n                  value={currentReview.arrivingPoint}\n                  onChange={this.onChangearrivingPoint}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"leavingHour\">Leaving Hour</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"notes\"\n                  value={currentReview.leavingHour}\n                  onChange={this.onChangeleavingHour}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"length\">length</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"notes\"\n                  value={currentReview.length}\n                  onChange={this.onChangelength}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"levelOfCrowd\">levelOfCrowd</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"notes\"\n                  value={currentReview.levelOfCrowd}\n                  onChange={this.onChangelevelOfCrowd}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"notes\">Notes</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"notes\"\n                  value={currentReview.notes}\n                  onChange={this.onChangeNotes}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"satisfaction\">Satisfaction</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"notes\"\n                  value={currentReview.satisfaction}\n                  onChange={this.onChangeSatisfaction}\n                />\n              </div>\n            </form>\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteReview}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateReview}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Review...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  } else {\n    return {};\n  }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\nimport ReviewDataService from \"../services/review.service\";\nimport { Link } from \"react-router-dom\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class ReviewsList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchCriterias = this.onChangeSearchCriterias.bind(this);\n    this.retrieveReviews = this.retrieveReviews.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveReview = this.setActiveReview.bind(this);\n    this.removeAllReviews = this.removeAllReviews.bind(this);\n    this.searchcriterias = this.searchcriterias.bind(this);\n\n    this.state = {\n      reviews: [],\n      currentReview: null,\n      currentIndex: -1,\n      searchcriterias: \"\",\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveReviews();\n    \n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  onChangeSearchCriterias(e) {\n    const searchcriterias = e.target.value;\n\n    this.setState({\n      searchcriterias: searchcriterias\n    });\n  }\n\n  retrieveReviews() {\n    ReviewDataService.getAll()\n      .then(response => {\n        this.setState({\n          reviews: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveReviews();\n    this.setState({\n      currentReview: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveReview(review, index) {\n    this.setState({\n      currentReview: review,\n      currentIndex: index\n    });\n  }\n\n  removeAllReviews() {\n    ReviewDataService.deleteAll()\n      .then(response => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  searchcriterias() {\n    ReviewDataService.findBybusNumber(this.state.searchcriterias)\n      .then(response => {\n        this.setState({\n          reviews: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { searchcriterias, reviews, currentReview, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by Params\"\n              value={searchcriterias}\n              onChange={this.onChangeSearchCriterias}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.searchcriterias}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Reviews List</h4>\n\n          <ul className=\"list-group\">\n            {reviews &&\n              reviews.map((review, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveReview(review, index)}\n                  key={index}\n                >\n                  {review.transport}\n                </li>\n              ))}\n          </ul>\n\n          <button\n            className=\"m-3 btn btn-sm btn-danger\"\n            onClick={this.removeAllReviews}\n          >\n            Remove All\n          </button>\n        </div>\n        <div className=\"col-md-6\">\n          {currentReview ? (\n            <div>\n              <h4>Review</h4>\n              <div>\n                <label>\n                  <strong>Transport:</strong>\n                </label>{\" \"}\n                {currentReview.transport}\n              </div>\n              <div>\n                <label>\n                  <strong>Notes:</strong>\n                </label>{\" \"}\n                {currentReview.notes}\n              </div>\n              <div>\n                <label>\n                  <strong>Leaving Point:</strong>\n                </label>{\" \"}\n                {currentReview.leavingPoint}\n              </div>\n              <div>\n                <label>\n                  <strong>Arriving Point:</strong>\n                </label>{\" \"}\n                {currentReview.arrivingPoint}\n              </div>\n              <div>\n                <label>\n                  <strong>Leaving Hour:</strong>\n                </label>{\" \"}\n                {currentReview.leavingHour}\n              </div>\n              <div>\n                <label>\n                  <strong>Length: </strong>\n                </label>{\" \"}\n                {currentReview.length}\n              </div>\n              <div>\n                <label>\n                  <strong>Level of Crowd:</strong>\n                </label>{\" \"}\n                {currentReview.levelOfCrowd}\n              </div>\n              <div>\n                <label>\n                  <strong>Notes:</strong>\n                </label>{\" \"}\n                {currentReview.notes}\n              </div>\n              <div>\n                <label>\n                  <strong>Satisfaction:</strong>\n                </label>{\" \"}\n                {currentReview.satisfaction}\n              </div>\n\n              <Link\n                to={\"/reviews/\" + currentReview.id}\n                className=\"badge badge-warning\"\n              >\n                Edit\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a Review...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { username: \"\" }\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser, userReady: true })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        {(this.state.userReady) ?\n        <div>\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong>{\" \"}\n          {currentUser.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>: null}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport AddReview from \"./components/add-review.component\";\nimport Review from \"./components/review.component\";\nimport ReviewsList from \"./components/reviews-list.component\";\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-light\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            Transport Review\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/reviews\"} className=\"nav-link\">\n                Reviews\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add a review\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </Link>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n          </div>\n           )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/reviews\"]} component={ReviewsList} />\n            <Route exact path=\"/add\" component={AddReview} />\n            <Route path=\"/reviews/:id\" component={Review} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}